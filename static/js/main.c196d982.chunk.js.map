{"version":3,"sources":["kjw_resume.pdf","Nav.js","animation.js","Home.js","Social.js","Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","react_default","a","createElement","className","Link","to","href","React","Component","$","document","ready","elementClass","typingSpeed","thhis","css","position","display","prepend","text","find","trim","split","amntOfChars","length","newString","setTimeout","prev","removeAttr","i","char","autoType","Home","src_Nav","Social","Resume","Pdf","rel","target","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.c196d982.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kjw_resume.8d9a632f.pdf\";","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nclass Nav extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"nav\">\n                    <ul>\n                        <Link to=\"/\">home</Link>\n                    </ul>\n                    <ul>\n                        <Link to=\"/resume\">resume</Link>\n                    </ul>\n                    <ul>\n                        <Link to=\"/social\">social</Link>\n                    </ul>\n                    <ul>\n                        <a href=\"https://github.com/katyjane8\">github</a>\n                    </ul>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default Nav","import $ from 'jquery'; \n\nfunction autoType(elementClass, typingSpeed) {\n    var thhis = $(elementClass);\n    thhis.css({\n        \"position\": \"relative\",\n        \"display\": \"inline-block\"\n    });\n    thhis.prepend('<div class=\"cursor\" style=\"right: initial; left:0;\"></div>');\n    thhis = thhis.find(\".text-js\");\n    var text = thhis.text().trim().split('');\n    var amntOfChars = text.length;\n    var newString = \"\";\n    thhis.text(\"|\");\n    setTimeout(function () {\n        thhis.css(\"opacity\", 1);\n        thhis.prev().removeAttr(\"style\");\n        thhis.text(\"\");\n        for (var i = 0; i < amntOfChars; i++) {\n            (function (i, char) {\n                setTimeout(function () {\n                    newString += char;\n                    thhis.text(newString);\n                }, i * typingSpeed);\n            })(i + 1, text[i]);\n        }\n    }, 1500);\n}\n\n$(document).ready(function () {  \n    autoType(\".type-js\", 200);\n});","import React from 'react'\nimport Nav from './Nav'\nimport './App.scss'\nimport './animation.js'\n\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Nav />\n                <div className=\"type-js headline\">\n                    <h1 className='text-js'>katy welyczko dot com</h1>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home","import React from 'react'\nimport Nav from './Nav'\n\nclass Social extends React.Component {\n  render () {\n    return (\n      <div className='social-page'>\n        <Nav />\n          <h1>\n          <a href=\"https://www.instagram.com/katyjane8/\">INSTAGRAM</a>\n          </h1>\n          <h1>\n          <a href=\"https://www.facebook.com/kathrine.welyczko\">FACEBOOK</a>\n          </h1>\n          <h1>\n          <a href=\"https://twitter.com/katyjane8?lang=en/\">TWITTER</a>\n          </h1>\n      </div>\n    );\n  }\n}\n\nexport default Social","import React from 'react'\nimport Nav from './Nav'\nimport Pdf from './kjw_resume.pdf'\n\nclass Resume extends React.Component {\n    render() {\n        return (\n            <div >\n                <Nav />\n                <div className='resume-title'><a href={Pdf} rel=\"noreferrer noopener\" target=\"_blank\">download a PDF of my full resume here</a></div>\n                <br />\n                <div className='resume-title'><h1>Katy Welyczko - Software Developer</h1>\n                    <p>I am a full stack developer with a passion for data and testing. I am highly analytical and process-oriented with in-depth knowledge of database types. I thrive in areas that need process improvement and a focus on efficiency. My code experience is supported by 5+ years of dedicated technical project management.</p>\n                    <h2>Recent Work Experience</h2>\n                    <h3>Apto</h3>\t\n                    <p>Denver, CO -- Software Engineer\t-- Apr. 2018 to Current</p>\n                    <p>Drive feature creation with work in React, Typescript, and Node on a Salesforce backend</p>\n                    <p>Write automated tests in Java for Selenium WebDriver</p>\n                    <p>Work in IntelliJ with Gradle to execute test suite and run regressions against custom built API</p>\n                    <p>Improve API layer with load testing and DevOps tools</p>\n                    <h2>Education</h2>\n                    <h3>Turing School of Software & Design</h3>\t\n                    <p>Denver, CO -- Ruby on Rails\t-- Aug. 2017 to Apr. 2018</p>\n                    <p>Backend specific program with emphasis on API consuming and database structure</p>\n                    <p>Logged over 2000 hours in development</p>\n                    <h2> - </h2>\n                </div>         \n            </div>\n        )\n    }\n}\n\nexport default Resume","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport Social from './Social';\nimport Resume from './Resume';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/social\" component={Social} />\n          <Route path=\"/resume\" component={Resume} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}